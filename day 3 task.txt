1:COMPARING TWO JSON HAVING SAME PROPERTIES WITHOUT ORDER
function compare(obj1, obj2) {
const sortedObj1 = JSON.stringify(obj1, Object.keys(obj1).sort());
const sortedObj2 = JSON.stringify(obj2, Object.keys(obj2).sort());
return sortedObj1 === sortedObj2;
}
let obj1 = { age: 5, name: 'person 1' };
let obj2 = { name: 'person 1', age: 5 };
let isEqual = compare(obj1, obj2);
console.log(isEqual);

This code defines a compare() function that sorts the keys of obj1 and obj2 using Object.keys() and the .sort() method. Then it converts the objects to JSON strings using JSON.stringify() with the sorted keys. Finally, it compares the sorted JSON strings for equality.
In this example, the isEqual variable will be true since the sorted JSON strings of obj1 and obj2 are the same.

 2:Printing the flags of all the countries in the console
fetch('https://restcountries.com/v3.1/all')
.then(response => response.json())
.then(data => {
data.forEach(country => {
const flag = country.flags.png; // Get the flag URL
console.log(flag);
});
})
.catch(error => {
console.log('Error:', error);
});

3:Printing all the country name,region,subregion,population

fetch("https://restcountries.com/v3.1/all")
.then(response => response.json())
.then(data => {
data.forEach(country => {
const name = country.name.common;
const region = country.region;
const subRegion = country.subregion;
const population = country.population;
console.log(`Name: ${name}`);
console.log(`Region: ${region}`);
console.log(`Sub-Region: ${subRegion}`);
console.log(`Population: ${population}`);
console.log("------------------");
});
})
.catch(error => {
console.error("Error occurred:", error);
  });

